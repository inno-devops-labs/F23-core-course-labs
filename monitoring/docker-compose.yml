version: "3"

networks:
  loki:

services:
  app_python:
    image: quiner/app-python:latest
    ports:
      - "8080:8080"
    logging: &logger
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "2"
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/healthcheck" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - loki
    deploy:
      resources:
        limits:
          memory: "512M"

  app_go:
    image: quiner/app-go:latest
    ports:
      - "8070:8070"
    logging: *logger
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8070/healthcheck" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - loki
    deploy:
      resources:
        limits:
          memory: "512M"

  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    logging: *logger
    networks:
      - loki
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3100/ready" ]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: "512M"

  promtail:
    image: grafana/promtail:2.9.2
    ports:
      - "9080:9080"
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./promtail/promtail-conf.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    logging: *logger
    networks:
      - loki
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9080/" ]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: "512M"

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./grafana:/etc/grafana/provisioning
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    logging: *logger
    networks:
      - loki
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: "1G"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/config.yml
    command: '--config.file=/etc/prometheus/config.yml'
    ports:
      - "9090:9090"
    networks:
      - loki
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9090/-/healthy" ]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: "1G"