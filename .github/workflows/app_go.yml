name: Go package

on:
  pull_request:
    paths:
      - app_go/**
      - .github/workflows/app_go.yml

defaults:
  run:
    working-directory: ./app_go

jobs:
  golang:
    runs-on: ubuntu-latest
    defaults:				
      run:
        working-directory: ./app_go/src

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.0'
    
      - name: Build
        run: go build

      - name: Test
        run: go test -v ./tests/...
      
      - name: Lint
        run: go fmt .

      - uses: snyk/actions/setup@master
      - name: Run Snyk to check for vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --sarif-file-output=results.sarif
        continue-on-error: true # To ensure SARIF upload is called even if Snyk test fails
        
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ./app_go/src/results.sarif
                  
  docker:
    runs-on: ubuntu-latest
    needs: golang
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./app_go
          file: ./app_go/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/app-go:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/app-go:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/app-go:buildcache,mode=max
