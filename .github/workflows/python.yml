name: Python package

on:
  push:
    paths:
      - app_python/**
      - .github/workflows/python.yml

defaults:
  run:
    working-directory: ./app_python

env:
  PYTHONDONTWRITEBYTECODE: 1

jobs:
  security:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10" ]
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: app_python

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif 
            --file=app_python/requirements/base.txt 
            --file=app_python/requirements/dev.txt 
            --package-manager=pip
            --skip-unresolved

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10" ]
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: app_python

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies
          cache-dependency-path: |
            ./app_python/requirements/base.txt
            ./app_python/requirements/dev.txt

      - name: Install dependencies
        run: |
          pip install -r requirements/base.txt -r requirements/dev.txt

      - name: Lint
        run: |
          isort src tests --profile black
          black src tests

      - name: Test with pytest
        run: pytest --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml

      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: app_python/junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      # CI
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./app_python
          file: ./app_python/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/time-python:latest
